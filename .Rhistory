# data cleaning
simulations <- simulations[-c(5,12,14,19),]
View(simulations)
View(simulations)
simulations_north <- filter(simulations,region==1)
simulations_east <- filter(simulations,region==2)
simulations_west <- filter(simulations,region==3)
View(simulations)
simulation[X=1]
simulations[X=1]
# data importation
simulations <- read.csv("../data/simulations_indicators.csv",sep=",", header=T, dec=".", stringsAsFactors=FALSE)
# data importation
simulations <- read.csv("../data/simulations_indicators.csv",sep=",", header=T, dec=".", stringsAsFactors=FALSE)
View(simulations)
simulations$direct.density.dependance[simulations$X=5] <- NA
simulations$direct.density.dependance[simulations$X==5] <- NA
View(simulations)
View(simulations)
View(simulations)
View(simulations)
# data cleaning
simulations <- simulations[-c(5,12,14,19),]*
simulations$direct.density.dependance[simulations$direct.density.dependance>20] <- NA
simulations$delayed.density.dependance[simulations$delayed.density.dependance>20] <- NA
simulations$delayed.density.dependance[simulations$delayed.density.dependance>20] <- NA
simulations$s.index[simulations$s.index>20] <- NA
simulations$min_s[simulations$min_s>20] <- NA
simulations$max_s[simulations$max_s>20] <- NA
simulations$seasonality[simulations$seasonality>20] <- NA
simulations$min_n[simulations$min_n>20] <- NA
simulations$max_n[simulations$max_n>20] <- NA
View(simulations)
# data cleaning
simulations <- simulations[-c(5,12,14,19),]*
simulations$direct.density.dependance[simulations$direct.density.dependance>15] <- NA
simulations$delayed.density.dependance[simulations$delayed.density.dependance>15] <- NA
simulations$s.index[simulations$s.index>15] <- NA
simulations$min_s[simulations$min_s>15] <- NA
simulations$max_s[simulations$max_s>15] <- NA
simulations$seasonality[simulations$seasonality>15] <- NA
simulations$min_n[simulations$min_n>15] <- NA
simulations$max_n[simulations$max_n>15] <- NA
View(simulations)
# data cleaning
simulations <- simulations[-c(5,12,14,19),]*
simulations$direct.density.dependance[simulations$direct.density.dependance>40] <- NA
simulations$delayed.density.dependance[simulations$delayed.density.dependance>40] <- NA
simulations$delayed.density.dependance[simulations$direct.density.dependance>40] <- NA
simulations$direct.density.dependance[simulations$delayed.density.dependance>40] <- NA
simulations$s.index[simulations$s.index>40] <- NA
simulations$min_s[simulations$min_s>40] <- NA
simulations$max_s[simulations$max_s>40] <- NA
simulations$seasonality[simulations$seasonality>40] <- NA
simulations$min_n[simulations$min_n>40] <- NA
simulations$max_n[simulations$max_n>40] <- NA
View(simulations)
# data importation
simulations <- read.csv("../data/simulations_indicators.csv",sep=",", header=T, dec=".", stringsAsFactors=FALSE)
# data cleaning
simulations <- simulations[-c(5,12,14,19),]*
simulations$direct.density.dependance[simulations$direct.density.dependance>40] <- NA
simulations$delayed.density.dependance[simulations$delayed.density.dependance>40] <- NA
simulations$delayed.density.dependance[simulations$direct.density.dependance>40] <- NA
simulations$direct.density.dependance[simulations$delayed.density.dependance>40] <- NA
simulations$s.index[simulations$s.index>40] <- NA
simulations$min_s[simulations$min_s>40] <- NA
simulations$max_s[simulations$max_s>40] <- NA
simulations$seasonality[simulations$seasonality>40] <- NA
simulations$min_n[simulations$min_n>40] <- NA
simulations$max_n[simulations$max_n>40] <- NA
View(simulations)
View(simulations)
View(simulations)
# data importation
simulations <- read.csv("../data/simulations_indicators.csv",sep=",", header=T, dec=".", stringsAsFactors=FALSE)
View(simulations)
# data cleaning
simulations <- simulations[-c(5,12,14,19),]*
simulations$direct.density.dependance[simulations$direct.density.dependance>40 ] <- NA
simulations$delayed.density.dependance[simulations$delayed.density.dependance>40] <- NA
simulations$s.index[simulations$s.index>40] <- NA
simulations$min_s[simulations$min_s>40] <- NA
simulations$max_s[simulations$max_s>40] <- NA
simulations$seasonality[simulations$seasonality>40] <- NA
simulations$min_n[simulations$min_n>40] <- NA
simulations$max_n[simulations$max_n>40] <- NA
simulations$seasonality[simulations$seasonality<(-40)] <- NA
simulations$min_n[simulations$min_n<(-40)] <- NA
simulations$max_n[simulations$max_n<(-40)] <- NA
simulations$delayed.density.dependance[is.na(simulations$direct.density.dependance)] <- NA
simulations$direct.density.dependance[is.na(simulations$delayed.density.dependance)] <- NA
View(simulations)
library(dplyr)
# Opening data
data <- read.csv("../data/data_Korpela.csv", sep=",", header=T, dec=".")
# simulation's indicators
simulations <-data.frame(matrix(0,24,10))
names(simulations) <- c("scenario","zone","direct density dependance","delayed density dependance","s-index","min_s","max_s","seasonality","min_n","max_n")
# vole density
Vole <- data.frame(matrix(0,2000,24))
names(Vole) <- c("1n","1e","1o","2n","2e","2o","3n","3e","3o","4n","4e","4o","5n","5e","5o","6n","6e","6o","7n","7e","7o","8n","8e","8o")
# vole density in autumn with a 2 years gap
Vole_autumn_2 <- data.frame(matrix(0,1000,24))
names(Vole_autumn_2) <- c("1n","1e","1o","2n","2e","2o","3n","3e","3o","4n","4e","4o","5n","5e","5o","6n","6e","6o","7n","7e","7o","8n","8e","8o")
# vole density in autumn with a 1 years gap
Vole_autumn_1 <- data.frame(matrix(0,1000,24))
names(Vole_autumn_1) <- c("1n","1e","1o","2n","2e","2o","3n","3e","3o","4n","4e","4o","5n","5e","5o","6n","6e","6o","7n","7e","7o","8n","8e","8o")
# vole density in spring with a 1 years gap
Vole_spring_1 <- data.frame(matrix(0,1000,24))
names(Vole_spring_1) <- c("1n","1e","1o","2n","2e","2o","3n","3e","3o","4n","4e","4o","5n","5e","5o","6n","6e","6o","7n","7e","7o","8n","8e","8o")
# vole density in spring without  years gap
Vole_spring <- data.frame(matrix(0,1000,24))
names(Vole_spring) <- c("1n","1e","1o","2n","2e","2o","3n","3e","3o","4n","4e","4o","5n","5e","5o","6n","6e","6o","7n","7e","7o","8n","8e","8o")
# vole gowth rate in winter
Yt_1 <- data.frame(matrix(0,1000,24))
names(Yt_1) <- c("1n","1e","1o","2n","2e","2o","3n","3e","3o","4n","4e","4o","5n","5e","5o","6n","6e","6o","7n","7e","7o","8n","8e","8o")
# vole gowth rate in summer
Yt_2 <- data.frame(matrix(0,1000,24))
names(Yt_2) <- c("1n","1e","1o","2n","2e","2o","3n","3e","3o","4n","4e","4o","5n","5e","5o","6n","6e","6o","7n","7e","7o","8n","8e","8o")
# We open the parameters estimated previously and create variable to stock them
parameters <- read.csv("../data/parameters_vole.csv", sep=",", header=T, dec=".",stringsAsFactors=FALSE)
parameters_pred <- read.csv("../data/parameters_predators.csv", sep=",", header=T, dec=".",stringsAsFactors=FALSE)
# Now we can do the simulations for each zone (3) and each scenario (8) , ie 24 simulations
for (scenario in 1:8){
for (zone in 1:3){
# the simulation's number
sim <- 3*(scenario-1)+zone
# for each zone, we have to select data and estimators for this zone
if (zone==1){
Present <- filter(data,zone=="north",year==2011)
Delay <- filter(data,zone=="north",year==2010)
a1 <- parameters[1,4]
b1 <- parameters[1,5]
c1 <- parameters[1,6]
d1 <- parameters[1,7]
e1 <- parameters[1,8]
f1 <- parameters[1,9]
sigma1 <- parameters[1,10]
a2 <- parameters[2,4]
b2 <- parameters[2,5]
c2 <- parameters[2,6]
d2 <- parameters[2,7]
e2 <- parameters[2,8]
f2 <- parameters[2,9]
sigma2 <- parameters[2,10]
a3 <- parameters_pred[1,4]
b3 <- parameters_pred[1,5]
c3 <- parameters_pred[1,6]
d3 <- parameters_pred[1,7]
sigma3 <- parameters_pred[1,8]
a4 <- parameters_pred[2,4]
b4 <- parameters_pred[2,5]
c4 <- parameters_pred[2,6]
d4 <- parameters_pred[2,7]
sigma4 <- parameters_pred[2,8]
a5 <- parameters_pred[3,4]
b5 <- parameters_pred[3,5]
c5 <- parameters_pred[3,6]
d5<- parameters_pred[3,7]
sigma5 <- parameters_pred[3,8]
}
if (zone==2){
Present <- filter(data,zone=="east",year==2011)
Delay <- filter(data,zone=="east",year==2010)
a1 <- parameters[3,4]
b1 <- parameters[3,5]
c1 <- parameters[3,6]
d1 <- parameters[3,7]
e1 <- parameters[3,8]
f1 <- parameters[3,9]
sigma1 <- parameters[3,10]
a2 <- parameters[4,4]
b2 <- parameters[4,5]
c2 <- parameters[4,6]
d2 <- parameters[4,7]
e2 <- parameters[4,8]
f2 <- parameters[4,9]
sigma2 <- parameters[4,10]
a3 <- parameters_pred[4,4]
b3 <- parameters_pred[4,5]
c3 <- parameters_pred[4,6]
d3 <- parameters_pred[4,7]
sigma3 <- parameters_pred[4,8]
a4 <- parameters_pred[5,4]
b4 <- parameters_pred[5,5]
c4 <- parameters_pred[5,6]
d4 <- parameters_pred[5,7]
sigma4 <- parameters_pred[5,8]
a5 <- parameters_pred[6,4]
b5 <- parameters_pred[6,5]
c5 <- parameters_pred[6,6]
d5 <- parameters_pred[6,7]
sigma5 <- parameters_pred[6,8]
}
if (zone==3){
Present <- filter(data,zone=="west",year==2011)
Delay <- filter(data,zone=="west",year==2010)
a1 <- parameters[5,4]
b1 <- parameters[5,5]
c1 <- parameters[5,6]
d1 <- parameters[5,7]
e1 <- parameters[5,8]
f1 <- parameters[5,9]
sigma1 <- parameters[5,10]
a2 <- parameters[6,4]
b2 <- parameters[6,5]
c2 <- parameters[6,6]
d2 <- parameters[6,7]
e2 <- parameters[6,8]
f2 <- parameters[6,9]
sigma2 <- parameters[6,10]
a3 <- parameters_pred[7,4]
b3 <- parameters_pred[7,5]
c3 <- parameters_pred[7,6]
d3 <- parameters_pred[7,7]
sigma3 <- parameters_pred[7,8]
a4 <- parameters_pred[8,4]
b4 <- parameters_pred[8,5]
c4 <- parameters_pred[8,6]
d4 <- parameters_pred[8,7]
sigma4 <- parameters_pred[8,8]
a5 <- parameters_pred[9,4]
b5 <- parameters_pred[9,5]
c5 <- parameters_pred[9,6]
d5 <- parameters_pred[9,7]
sigma5 <- parameters_pred[9,8]
}
# we initialize Vole density
At <- mean(na.omit(Present$Vole.Autumn))
At_1 <- mean(na.omit(Delay$Vole.Autumn))
St <- mean(na.omit(Present$Vole.Spring))
St_1 <- mean(na.omit(Delay$Vole.Spring))
# we initialize predators density depending of the scenario
if (scenario ==2 ||scenario ==5 ||scenario ==7 ||scenario ==8 ){
P1t  <-min(na.omit(data$Small.mustelid))
}
else {
P1t <- mean(na.omit(Present$Small.mustelid))
}
if (scenario ==3 ||scenario ==4 ||scenario ==7 ||scenario ==8 ){
P2t <-min(na.omit(data$Generalist.predator))
}
else {
P2t <- mean(na.omit(Present$Generalist.predator))
}
if (scenario ==3 ||scenario ==5 ||scenario ==6 ||scenario ==8 ){
P3t <- min(na.omit(data$Avian.predator))
}
else {
P3t <-mean(na.omit(Present$Avian.predator))
}
# We create some vectors and initialize some variables
saisonality_vector <- 1:1000
saison <- 0
# we can begin our 1000 years loop
for (i in 1:1000){
# Chronologically calculated
# Predators are calculated only if there are taken in the model
# Winter
if (scenario ==1 ||scenario ==3 ||scenario ==4 ||scenario ==6 ){
P1t <- a3 + P1t +b3*At +c3*St + d3*At_1 + rnorm(1,0,sigma3)
}
if (scenario ==1 ||scenario ==2 ||scenario ==5 ||scenario ==6 ){
P2t <- a4 + P2t +b4*At +c4*St +d4*At_1 + rnorm(1,0,sigma4)
}
# Spring
St_2 <- St_1
St_1 <- St
St <- a1 + (b1+1)*At +c1*At_1 +d1*P1t +e1*P2t + f1*P3t+ rnorm(1,0,sigma1)
# Summer
if (scenario ==1 ||scenario ==2 ||scenario ==4 ||scenario ==7 ){
P3t <- a5 + P3t +b5*St +c5*At +d5*St_1 + rnorm(1,0,sigma5)
}
# Autumn
At_2 <- At_1
At_1 <- At
At <- a2 + (b2+1)*St + c2*St_1 +d2*P1t +e2*P2t +f2*P3t+ rnorm(1,0,sigma2)
# Vole density Storage
Vole_autumn_2[i,sim] <- At_2
Vole_autumn_1[i,sim] <- At_1
Vole_spring_1[i,sim] <- St_1
Vole_spring[i,sim] <- St
Vole[2*i-1,sim] <- St
Vole[2*i,sim] <- At
# Growth rate
Yt_1[i,sim] <- St-At_1
Yt_2[i,sim] <- At-St
# seasonality
saison <- saison + (At-St)-(St-At_1)
saisonality_vector[i] <-  saisonalite
# end of the 1000 years loop
}
# calcul : from seasonal density dependance to annual density dependancd
Density_dependance_1 <- lm(formula = Yt_1[,sim] ~ Vole_autumn_1[,sim] +  Vole_autumn_2[,sim] )
Density_dependance_2 <- lm(formula = Yt_2[,sim] ~ Vole_spring[,sim] +  Vole_spring_1[,sim] )
B1 <- Density_dependance_1$coefficient[2]
C1 <- Density_dependance_1$coefficient[3]
B2 <- Density_dependance_2$coefficient[2]
C2 <- Density_dependance_2$coefficient[3]
DR <- B1 + B2 + B2*B1 - 0.20
DL <- C1 + C2 + C2*B1 + B2*C1
# we complete our data table
simulations[sim,1] <- scenario
simulations[sim,2] <- zone
simulations[sim,3] <- DR
simulations[sim,4] <- DL
simulations[sim,5] <- sqrt(var(Vole[,sim]))
simulations[sim,6] <- sqrt((999)*var(Vole[,sim])/qchisq(p=0.975,df=999))
simulations[sim,7] <- sqrt((999)*var(Vole[,sim])/qchisq(p=0.025,df=999))
simulations[sim,8] <- saison/1000
simulations[sim,9] <- saison/1000-1.96*(var(saisonality_vector)/sqrt(1000))
simulations[sim,10] <- saison/1000+1.96*(var(saisonality_vector)/sqrt(1000))
# end of the zone's loop
}
# end of the scenario's loop
}
# Now we can do the simulations for each zone (3) and each scenario (8) , ie 24 simulations
for (scenario in 1:8){
for (zone in 1:3){
# the simulation's number
sim <- 3*(scenario-1)+zone
# for each zone, we have to select data and estimators for this zone
if (zone==1){
Present <- filter(data,zone=="north",year==2011)
Delay <- filter(data,zone=="north",year==2010)
a1 <- parameters[1,4]
b1 <- parameters[1,5]
c1 <- parameters[1,6]
d1 <- parameters[1,7]
e1 <- parameters[1,8]
f1 <- parameters[1,9]
sigma1 <- parameters[1,10]
a2 <- parameters[2,4]
b2 <- parameters[2,5]
c2 <- parameters[2,6]
d2 <- parameters[2,7]
e2 <- parameters[2,8]
f2 <- parameters[2,9]
sigma2 <- parameters[2,10]
a3 <- parameters_pred[1,4]
b3 <- parameters_pred[1,5]
c3 <- parameters_pred[1,6]
d3 <- parameters_pred[1,7]
sigma3 <- parameters_pred[1,8]
a4 <- parameters_pred[2,4]
b4 <- parameters_pred[2,5]
c4 <- parameters_pred[2,6]
d4 <- parameters_pred[2,7]
sigma4 <- parameters_pred[2,8]
a5 <- parameters_pred[3,4]
b5 <- parameters_pred[3,5]
c5 <- parameters_pred[3,6]
d5<- parameters_pred[3,7]
sigma5 <- parameters_pred[3,8]
}
if (zone==2){
Present <- filter(data,zone=="east",year==2011)
Delay <- filter(data,zone=="east",year==2010)
a1 <- parameters[3,4]
b1 <- parameters[3,5]
c1 <- parameters[3,6]
d1 <- parameters[3,7]
e1 <- parameters[3,8]
f1 <- parameters[3,9]
sigma1 <- parameters[3,10]
a2 <- parameters[4,4]
b2 <- parameters[4,5]
c2 <- parameters[4,6]
d2 <- parameters[4,7]
e2 <- parameters[4,8]
f2 <- parameters[4,9]
sigma2 <- parameters[4,10]
a3 <- parameters_pred[4,4]
b3 <- parameters_pred[4,5]
c3 <- parameters_pred[4,6]
d3 <- parameters_pred[4,7]
sigma3 <- parameters_pred[4,8]
a4 <- parameters_pred[5,4]
b4 <- parameters_pred[5,5]
c4 <- parameters_pred[5,6]
d4 <- parameters_pred[5,7]
sigma4 <- parameters_pred[5,8]
a5 <- parameters_pred[6,4]
b5 <- parameters_pred[6,5]
c5 <- parameters_pred[6,6]
d5 <- parameters_pred[6,7]
sigma5 <- parameters_pred[6,8]
}
if (zone==3){
Present <- filter(data,zone=="west",year==2011)
Delay <- filter(data,zone=="west",year==2010)
a1 <- parameters[5,4]
b1 <- parameters[5,5]
c1 <- parameters[5,6]
d1 <- parameters[5,7]
e1 <- parameters[5,8]
f1 <- parameters[5,9]
sigma1 <- parameters[5,10]
a2 <- parameters[6,4]
b2 <- parameters[6,5]
c2 <- parameters[6,6]
d2 <- parameters[6,7]
e2 <- parameters[6,8]
f2 <- parameters[6,9]
sigma2 <- parameters[6,10]
a3 <- parameters_pred[7,4]
b3 <- parameters_pred[7,5]
c3 <- parameters_pred[7,6]
d3 <- parameters_pred[7,7]
sigma3 <- parameters_pred[7,8]
a4 <- parameters_pred[8,4]
b4 <- parameters_pred[8,5]
c4 <- parameters_pred[8,6]
d4 <- parameters_pred[8,7]
sigma4 <- parameters_pred[8,8]
a5 <- parameters_pred[9,4]
b5 <- parameters_pred[9,5]
c5 <- parameters_pred[9,6]
d5 <- parameters_pred[9,7]
sigma5 <- parameters_pred[9,8]
}
# we initialize Vole density
At <- mean(na.omit(Present$Vole.Autumn))
At_1 <- mean(na.omit(Delay$Vole.Autumn))
St <- mean(na.omit(Present$Vole.Spring))
St_1 <- mean(na.omit(Delay$Vole.Spring))
# we initialize predators density depending of the scenario
if (scenario ==2 ||scenario ==5 ||scenario ==7 ||scenario ==8 ){
P1t  <-min(na.omit(data$Small.mustelid))
}
else {
P1t <- mean(na.omit(Present$Small.mustelid))
}
if (scenario ==3 ||scenario ==4 ||scenario ==7 ||scenario ==8 ){
P2t <-min(na.omit(data$Generalist.predator))
}
else {
P2t <- mean(na.omit(Present$Generalist.predator))
}
if (scenario ==3 ||scenario ==5 ||scenario ==6 ||scenario ==8 ){
P3t <- min(na.omit(data$Avian.predator))
}
else {
P3t <-mean(na.omit(Present$Avian.predator))
}
# We create some vectors and initialize some variables
saisonality_vector <- 1:1000
saison <- 0
# we can begin our 1000 years loop
for (i in 1:1000){
# Chronologically calculated
# Predators are calculated only if there are taken in the model
# Winter
if (scenario ==1 ||scenario ==3 ||scenario ==4 ||scenario ==6 ){
P1t <- a3 + P1t +b3*At +c3*St + d3*At_1 + rnorm(1,0,sigma3)
}
if (scenario ==1 ||scenario ==2 ||scenario ==5 ||scenario ==6 ){
P2t <- a4 + P2t +b4*At +c4*St +d4*At_1 + rnorm(1,0,sigma4)
}
# Spring
St_2 <- St_1
St_1 <- St
St <- a1 + (b1+1)*At +c1*At_1 +d1*P1t +e1*P2t + f1*P3t+ rnorm(1,0,sigma1)
# Summer
if (scenario ==1 ||scenario ==2 ||scenario ==4 ||scenario ==7 ){
P3t <- a5 + P3t +b5*St +c5*At +d5*St_1 + rnorm(1,0,sigma5)
}
# Autumn
At_2 <- At_1
At_1 <- At
At <- a2 + (b2+1)*St + c2*St_1 +d2*P1t +e2*P2t +f2*P3t+ rnorm(1,0,sigma2)
# Vole density Storage
Vole_autumn_2[i,sim] <- At_2
Vole_autumn_1[i,sim] <- At_1
Vole_spring_1[i,sim] <- St_1
Vole_spring[i,sim] <- St
Vole[2*i-1,sim] <- St
Vole[2*i,sim] <- At
# Growth rate
Yt_1[i,sim] <- St-At_1
Yt_2[i,sim] <- At-St
# seasonality
saison <- saison + (At-St)-(St-At_1)
saisonality_vector[i] <-  saison
# end of the 1000 years loop
}
# calcul : from seasonal density dependance to annual density dependancd
Density_dependance_1 <- lm(formula = Yt_1[,sim] ~ Vole_autumn_1[,sim] +  Vole_autumn_2[,sim] )
Density_dependance_2 <- lm(formula = Yt_2[,sim] ~ Vole_spring[,sim] +  Vole_spring_1[,sim] )
B1 <- Density_dependance_1$coefficient[2]
C1 <- Density_dependance_1$coefficient[3]
B2 <- Density_dependance_2$coefficient[2]
C2 <- Density_dependance_2$coefficient[3]
DR <- B1 + B2 + B2*B1 - 0.20
DL <- C1 + C2 + C2*B1 + B2*C1
# we complete our data table
simulations[sim,1] <- scenario
simulations[sim,2] <- zone
simulations[sim,3] <- DR
simulations[sim,4] <- DL
simulations[sim,5] <- sqrt(var(Vole[,sim]))
simulations[sim,6] <- sqrt((999)*var(Vole[,sim])/qchisq(p=0.975,df=999))
simulations[sim,7] <- sqrt((999)*var(Vole[,sim])/qchisq(p=0.025,df=999))
simulations[sim,8] <- saison/1000
simulations[sim,9] <- saison/1000-1.96*(var(saisonality_vector)/sqrt(1000))
simulations[sim,10] <- saison/1000+1.96*(var(saisonality_vector)/sqrt(1000))
# end of the zone's loop
}
# end of the scenario's loop
}
View(simulations)
