Time_e <- filter(donnees_est,year==1988+i)
Vole_e[2*i-1,1] <- mean(na.omit(Time_e$Vole.Spring))
Vole_e[2*i,1] <- mean(na.omit(Time_e$Vole.Autumn))
Must_e[i,1] <- mean(na.omit(Time_e$Small.mustelid))
Gene_e[i,1] <- mean(na.omit(Time_e$Generalist.predator))
Aeri_e[i,1] <-mean(na.omit(Time_e$Avian.predator))
Vole_e[2*i-1,2] <- 1988 +i +0.25 # car printemps
Vole_e[2*i,2]  <- 1988 +i +0.75 # car automne
Must_e[i,2] <- 1988+i
Gene_e[i,2] <- 1988+i
Aeri_e[i,2] <- 1988+i +0.5 # car été
}
vole_graph_e <- ggplot(data=Vole_e,aes(x=Vole_e[,2],y=Vole_e[,1]))+geom_line(color="darkgreen",size=1.5) +
ggtitle("Vole east") +
xlab("years") + ylab("log density") + theme_classic()+
theme(plot.title = element_text(size=18, face="bold",hjust = 0.5),
axis.title.x = element_text( size=18, face="bold"),
axis.title.y = element_text( size=18, face="bold"),
axis.text.x = element_text(face="bold", size=12,color="black") ,
axis.text.y = element_text(face="bold", size=12,color="black"))
vole_graph_e
must_graph_e <- ggplot(data=Must_e,aes(x=Must_e[,2],y=Must_e[,1]))+geom_line(color="darkred",size=1.5) +
ggtitle("Small mustelids east") +
xlab("years") + ylab("log density") + theme_classic()+
theme(plot.title = element_text(size=18, face="bold",hjust = 0.5),
axis.title.x = element_text( size=18, face="bold"),
axis.title.y = element_text( size=18, face="bold"),
axis.text.x = element_text(face="bold", size=12,color="black") ,
axis.text.y = element_text(face="bold", size=12,color="black"))
must_graph_e
gene_graph_e <- ggplot(data=Gene_e,aes(x=Gene_e[,2],y=Gene_e[,1]))+geom_line(color="orange",size=1.5) +
ggtitle("Fox and pine marten east") +
xlab("years") + ylab("log density") + theme_classic()+
theme(plot.title = element_text(size=18, face="bold",hjust = 0.5),
axis.title.x = element_text( size=18, face="bold"),
axis.title.y = element_text( size=18, face="bold"),
axis.text.x = element_text(face="bold", size=12,color="black") ,
axis.text.y = element_text(face="bold", size=12,color="black"))
gene_graph_e
aeri_graph_e <- ggplot(data=Aeri_e,aes(x=Aeri_e[,2],y=Aeri_e[,1]))+geom_line(color="darkblue",size=1.5) +
ggtitle("Avian predators east") +
xlab("years") + ylab("log density") + theme_classic()+
theme(plot.title = element_text(size=18, face="bold",hjust = 0.5),
axis.title.x = element_text( size=18, face="bold"),
axis.title.y = element_text( size=18, face="bold"),
axis.text.x = element_text(face="bold", size=12,color="black") ,
axis.text.y = element_text(face="bold", size=12,color="black"))
aeri_graph_e
donnees_ouest <- filter(donnees,cardinalite=="sud_ouest")
Vole_o <- data.frame(matrix(0,46,2))
Must_o <- data.frame(matrix(0,23,2))
Gene_o <- data.frame(matrix(0,23,2))
Aeri_o <- data.frame(matrix(0,23,2))
for (i in 1:23){
Time_o <- filter(donnees_ouest,year==1988+i)
Vole_o[2*i-1,1] <- mean(na.omit(Time_o$Vole.Spring))
Vole_o[2*i,1] <- mean(na.omit(Time_o$Vole.Autumn))
Must_o[i,1] <- mean(na.omit(Time_o$Small.mustelid))
Gene_o[i,1] <- mean(na.omit(Time_o$Generalist.predator))
Aeri_o[i,1] <-mean(na.omit(Time_o$Avian.predator))
Vole_o[2*i-1,2] <- 1988 +i +0.25 # car printemps
Vole_o[2*i,2]  <- 1988 +i +0.75 # car automne
Must_o[i,2] <- 1988+i
Gene_o[i,2] <- 1988+i
Aeri_o[i,2] <- 1988+i +0.5 # car été
}
vole_graph_o <- ggplot(data=Vole_o,aes(x=Vole_o[,2],y=Vole_o[,1]))+geom_line(color="darkgreen",size=1.5) +
ggtitle("Vole west") +
xlab("years") + ylab("log density") + theme_classic()+
theme(plot.title = element_text(size=18, face="bold",hjust = 0.5),
axis.title.x = element_text( size=18, face="bold"),
axis.title.y = element_text( size=18, face="bold"),
axis.text.x = element_text(face="bold", size=12,color="black") ,
axis.text.y = element_text(face="bold", size=12,color="black"))
vole_graph_o
must_graph_o <- ggplot(data=Must_o,aes(x=Must_o[,2],y=Must_o[,1]))+geom_line(color="darkred",size=1.5) +
ggtitle("Small mustelids west") +
xlab("years") + ylab("log density") + theme_classic()+
theme(plot.title = element_text(size=18, face="bold",hjust = 0.5),
axis.title.x = element_text( size=18, face="bold"),
axis.title.y = element_text( size=18, face="bold"),
axis.text.x = element_text(face="bold", size=12,color="black") ,
axis.text.y = element_text(face="bold", size=12,color="black"))
must_graph_o
gene_graph_o <- ggplot(data=Gene_o,aes(x=Gene_o[,2],y=Gene_o[,1]))+geom_line(color="orange",size=1.5) +
ggtitle("Fox and pine marten west") +
xlab("years") + ylab("log density") + theme_classic()+
theme(plot.title = element_text(size=18, face="bold",hjust = 0.5),
axis.title.x = element_text( size=18, face="bold"),
axis.title.y = element_text( size=18, face="bold"),
axis.text.x = element_text(face="bold", size=12,color="black") ,
axis.text.y = element_text(face="bold", size=12,color="black"))
gene_graph_o
aeri_graph_o <- ggplot(data=Aeri_o,aes(x=Aeri_o[,2],y=Aeri_o[,1]))+geom_line(color="darkblue",size=1.5) +
ggtitle("Avian predators west") +
xlab("years") + ylab("log density") + theme_classic()+
theme(plot.title = element_text(size=18, face="bold",hjust = 0.5),
axis.title.x = element_text( size=18, face="bold"),
axis.title.y = element_text( size=18, face="bold"),
axis.text.x = element_text(face="bold", size=12,color="black") ,
axis.text.y = element_text(face="bold", size=12,color="black"))
aeri_graph_o
A <- plot_grid(vole_graph_n,vole_graph_o,vole_graph_e,must_graph_n,must_graph_o,must_graph_e,gene_graph_n,gene_graph_o,gene_graph_e,aeri_graph_n,aeri_graph_o,aeri_graph_e, labels=c("1", "2","3","4","5","6","7","8","9","10","11","12"), ncol = 3, nrow = 4)
pdf("../Figures/my_plot.pdf",         # File name
width = 8, height = 7, # Width and height in inches
bg = "white",          # Background color
colormodel = "cmyk",    # Color model (cmyk is required for most publications)
paper = "A4")          # Paper size
# Creating a plot
plot(A)
# Closing the graphical device
dev.off()
pdf("../Figures/Graph1_averages_density2.pdf",         # File name
width = 14, height = 8, # Width and height in inches
bg = "black",          # Background color
colormodel = "cmyk",    # Color model (cmyk is required for most publications)
paper = "A4")          # Paper size
# Creating a plot
plot(A)
# Closing the graphical device
dev.off()
pdf("../Figures/Graph1_averages_density2.pdf",         # File name
width = 14, height = 8, # Width and height in inches
bg = "white",          # Background color
colormodel = "cmyk",    # Color model (cmyk is required for most publications)
paper = "A4")          # Paper size
# Creating a plot
plot(A)
pdf("../Figures/Graph1_averages_density2.pdf",         # File name
width = 14, height = 8, # Width and height in inches
bg = "white",          # Background color
colormodel = "cmyk",    # Color model (cmyk is required for most publications)
paper = "A4")          # Paper size
pdf("../Figures/Graph1_averages_density3.pdf",         # File name
width = 14, height = 8, # Width and height in inches
bg = "white",          # Background color
colormodel = "cmyk",    # Color model (cmyk is required for most publications)
paper = "A4")          # Paper size
# Creating a plot
plot(A)
# Closing the graphical device
dev.off()
pdf("../Figures/Graph1_averages_density2.pdf",         # File name
width = 20, height = 8, # Width and height in inches
bg = "white",          # Background color
colormodel = "cmyk",    # Color model (cmyk is required for most publications)
paper = "A4")          # Paper size
# Creating a plot
plot(A)
# Closing the graphical device
dev.off()
pdf("../Figures/Graph1_averages_density2.pdf",         # File name
width = 20, height = 8, # Width and height in inches
bg = "white",          # Background color
colormodel = "cmyk")
# Creating a plot
plot(A)
# Closing the graphical device
dev.off()
must_graph_n <- ggplot(data=Must_n,aes(x=Must_n[,2],y=Must_n[,1]))+geom_line(color="darkred",size=1.5) +
ggtitle("Small mustelids north") +
xlab("years") + ylab("log density") + theme_classic()+
theme(plot.title = element_text(size=18, face="bold",hjust = 0.5),
axis.title.x = element_text( size=18, face="bold"),
axis.title.y = element_text( size=6, face="bold"),
axis.text.x = element_text(face="bold", size=12,color="black") ,
axis.text.y = element_text(face="bold", size=12,color="black"))
must_graph_n
must_graph_n <- ggplot(data=Must_n,aes(x=Must_n[,2],y=Must_n[,1]))+geom_line(color="darkred",size=1.5) +
ggtitle("Small mustelids north") +
xlab("years") + ylab("log density") + theme_classic()+
theme(plot.title = element_text(size=18, face="bold",hjust = 0.5),
axis.title.x = element_text( size=18, face="bold"),
axis.title.y = element_text( size=18, face="bold"),
axis.text.x = element_text(face="bold", size=12,color="black") ,
axis.text.y = element_text(face="bold", size=12,color="black"))
must_graph_n
A <- plot_grid(vole_graph_n,vole_graph_o,vole_graph_e,must_graph_n,must_graph_o,must_graph_e,gene_graph_n,gene_graph_o,gene_graph_e,aeri_graph_n,aeri_graph_o,aeri_graph_e, labels=c("1", "2","3","4","5","6","7","8","9","10","11","12"), ncol = 3, nrow = 4)
pdf("../Figures/Graph1_averages_density2.pdf",         # File name
width = 14, height = 8, # Width and height in inches
bg = "white",          # Background color
colormodel = "cmyk")
# Creating a plot
plot(A)
# Closing the graphical device
dev.off()
# we need some new packages
library(plyr)
# original data importation
tableau <- read.table("../Donnees/Korpela et al PRSL 2014 data.txt", sep="\t", header=T, dec=",")
tableau$Vole.Spring <- as.numeric(tableau$Vole.Spring)
# we will modify some types of variables
summary(tableau)
tableau$Vole.Spring <- as.numeric(tableau$Vole.Spring)
tableau$Vole.Autumn  <- as.numeric(tableau$Vole.Autumn )
tableau$Small.mustelid   <- as.numeric(tableau$Small.mustelid  )
tableau$Generalist.predator <- as.numeric(tableau$Generalist.predator)
tableau$Avian.predator   <- as.numeric(tableau$Avian.predator  )
new_colonnes<-data.frame(matrix("centre",891,4))
names(new_colonnes)<-c("longitude","latitude","cardinalite","site_ordo")
new_colonnes
# we add the 4 columns
donnees<-cbind(tableau,new_colonnes)
# we recodee some of the names : encoding problems
donnees$site[donnees$site == "pallasjSrvi"] <- "pallasjarvi"
donnees$site[donnees$site == "luumSki"] <- "luumaki"
donnees$site[donnees$site == "sodankylS"] <- "sodankyla"
donnees$site[donnees$site == "tohmajSrvi"] <- "tohmajarvi"
donnees$site[donnees$site == "ShtSri"] <- "ahtari"
donnees$latitude[donnees$site == "hauho"] <- 61.17193795784571
donnees$longitude[donnees$site == "hauho"] <- 24.563394493033037
donnees$site_ordo[donnees$site == "hauho"] <- 1
donnees$latitude[donnees$site == "heinola"] <-61.214453199709325
donnees$longitude[donnees$site == "heinola"] <- 26.037397307513178
donnees$site_ordo[donnees$site == "heinola"] <- 2
donnees$latitude[donnees$site == "ilmajoki"] <-62.73458686562898
donnees$longitude[donnees$site == "ilmajoki"] <-22.571161498822388
donnees$site_ordo[donnees$site == "ilmajoki"] <-3
donnees$latitude[donnees$site == "inari"] <-68.90626454694164
donnees$longitude[donnees$site == "inari"] <-27.029059540189902
donnees$site_ordo[donnees$site == "inari"] <-4
donnees$latitude[donnees$site == "kannus"] <-63.900363717827794
donnees$longitude[donnees$site == "kannus"] <-23.91672375111349
donnees$site_ordo[donnees$site == "kannus"] <-5
donnees$latitude[donnees$site == "karvia"] <-62.13303041685207
donnees$longitude[donnees$site == "karvia"] <-22.557948316998463
donnees$site_ordo[donnees$site == "karvia"] <-6
donnees$latitude[donnees$site == "kauhava"] <-63.101274042399794
donnees$longitude[donnees$site == "kauhava"] <-23.066095162688693
donnees$site_ordo[donnees$site == "kauhava"] <-7
donnees$latitude[donnees$site == "keuruu"] <- 62.255975595413716
donnees$longitude[donnees$site == "keuruu"] <-24.70813090058065
donnees$site_ordo[donnees$site == "keuruu"] <-8
donnees$latitude[donnees$site == "kevo"] <-69.75796858891722
donnees$longitude[donnees$site == "kevo"] <-27.017867829916767
donnees$site_ordo[donnees$site == "kevo"] <-9
donnees$latitude[donnees$site == "kolari"] <-67.33307354129319
donnees$longitude[donnees$site == "kolari"] <-23.78922926685231
donnees$site_ordo[donnees$site == "kolari"] <-10
donnees$latitude[donnees$site == "koli"] <-63.099708032798354
donnees$longitude[donnees$site == "koli"] <-29.799828217696344
donnees$site_ordo[donnees$site == "koli"] <-11
donnees$latitude[donnees$site == "korpilahti"] <-62.02113340809769
donnees$longitude[donnees$site == "korpilahti"] <-25.57088035606078
donnees$site_ordo[donnees$site == "korpilahti"] <-12
donnees$latitude[donnees$site == "kuhmo"] <-64.12916547749539
donnees$longitude[donnees$site == "kuhmo"] <-29.520157048770965
donnees$site_ordo[donnees$site == "kuhmo"] <-13
donnees$latitude[donnees$site == "kuusamo"] <-65.96390928667391
donnees$longitude[donnees$site == "kuusamo"] <-29.18813824043734
donnees$site_ordo[donnees$site == "kuusamo"] <-14
donnees$latitude[donnees$site == "lapua"] <-62.971549988769816
donnees$longitude[donnees$site == "lapua"] <-23.001866567258098
donnees$site_ordo[donnees$site == "lapua"] <-15
donnees$latitude[donnees$site == "loppi"] <-60.71740508584855
donnees$longitude[donnees$site == "loppi"] <-24.4419450073272
donnees$site_ordo[donnees$site == "loppi"] <-16
donnees$latitude[donnees$site == "luumaki"] <-62.84002966915132
donnees$longitude[donnees$site == "luumaki"] <-28.912952390107723
donnees$site_ordo[donnees$site == "luumaki"] <-17
donnees$latitude[donnees$site == "mikkeli"] <-61.68822602204782
donnees$longitude[donnees$site == "mikkeli"] <- 27.280515834064634
donnees$site_ordo[donnees$site == "mikkeli"] <- 18
donnees$latitude[donnees$site == "muhos"] <-64.80781659742189
donnees$longitude[donnees$site == "muhos"] <-25.99507459495535
donnees$site_ordo[donnees$site == "muhos"] <-19
donnees$latitude[donnees$site == "paimio"] <-60.456839159016766
donnees$longitude[donnees$site == "paimio"] <-22.687592015181714
donnees$site_ordo[donnees$site == "paimio"] <-20
donnees$latitude[donnees$site == "pallasjarvi"] <-68.02374980280263
donnees$longitude[donnees$site == "pallasjarvi"] <-24.216057473592983
donnees$site_ordo[donnees$site == "pallasjarvi"] <-21
donnees$latitude[donnees$site == "punkaharju"] <-61.755865889437295
donnees$longitude[donnees$site == "punkaharju"] <-29.39343524663757
donnees$site_ordo[donnees$site == "punkaharju"] <-22
donnees$latitude[donnees$site == "puolanka"] <-64.86725497125404
donnees$longitude[donnees$site == "puolanka"] <-27.67597545656743
donnees$site_ordo[donnees$site == "puolanka"] <-23
donnees$latitude[donnees$site == "ranua"] <-65.93231545042872
donnees$longitude[donnees$site == "ranua"] <-26.51879737018491
donnees$site_ordo[donnees$site == "ranua"] <-24
donnees$latitude[donnees$site == "rovaniemi"] <-66.50596024185901
donnees$longitude[donnees$site == "rovaniemi"] <-25.732290381304118
donnees$site_ordo[donnees$site == "rovaniemi"] <-25
donnees$latitude[donnees$site == "sodankyla"] <-67.41593233203037
donnees$longitude[donnees$site == "sodankyla"] <-26.589851899156837
donnees$site_ordo[donnees$site == "sodankyla"] <-26
donnees$latitude[donnees$site == "sotkamo"] <-64.13047524722737
donnees$longitude[donnees$site == "sotkamo"] <-28.38965115103982
donnees$site_ordo[donnees$site == "sotkamo"] <-27
donnees$latitude[donnees$site == "suonenjoki"] <-62.62590656797375
donnees$longitude[donnees$site == "suonenjoki"] <-27.122380689250058
donnees$site_ordo[donnees$site == "suonenjoki"] <-28
donnees$latitude[donnees$site == "tohmajarvi"] <-62.2232043951199
donnees$longitude[donnees$site == "tohmajarvi"] <-30.334194724668734
donnees$site_ordo[donnees$site == "tohmajarvi"] <-29
donnees$latitude[donnees$site == "vammala"] <-61.34328755967948
donnees$longitude[donnees$site == "vammala"] <-22.912847306989974
donnees$site_ordo[donnees$site == "vammala"] <-30
donnees$latitude[donnees$site == "viitasaari"] <-63.07323466048183
donnees$longitude[donnees$site == "viitasaari"] <-25.859865824469
donnees$site_ordo[donnees$site == "viitasaari"] <-31
donnees$latitude[donnees$site == "virolahti"] <-60.582795219758474
donnees$longitude[donnees$site == "virolahti"] <-27.70665301681641
donnees$site_ordo[donnees$site == "virolahti"] <-32
donnees$latitude[donnees$site == "ahtari"] <-62.55004929863743
donnees$longitude[donnees$site == "ahtari"] <-24.066963604038467
donnees$site_ordo[donnees$site == "ahtari"] <-33*
# we complet with regions from criteria of the Korpela study
donnees$cardinalite[donnees$latitude >66 ] <-"nord"
donnees$site_ordo[donnees$site == "ahtari"] <-33*
# we complet with regions from criteria of the Korpela study
donnees$cardinalite[donnees$latitude >66 ] <-"nord"
donnees$cardinalite[donnees$latitude < 64 & donnees$longitude<25] <- "sud_ouest"
donnees$cardinalite[donnees$longitude >29.2 & donnees$latitude <66 ] <- "est"
# we will modify some types of variables
donnees$latitude <- as.numeric(donnees$latitude)
donnees$longitude <- as.numeric(donnees$longitude)
donnees$cardinalite<- as.factor(tableau$cardinalite)
donnees$site_ordo <- as.numeric(donnees$site_ordo)
library(dplyr)
donnees$site_ordo[donnees$site == "ahtari"] <-33*
# we complet with regions from criteria of the Korpela study
donnees$cardinalite[donnees$latitude >66 ] <-"nord"
donnees$cardinalite[donnees$latitude < 64 & donnees$longitude<25] <- "sud_ouest"
donnees$cardinalite[donnees$longitude >29.2 & donnees$latitude <66 ] <- "est"
# we will modify some types of variables
donnees$latitude <- as.numeric(donnees$latitude)
donnees$longitude <- as.numeric(donnees$longitude)
donnees$cardinalite<- as.factor(tableau$cardinalite)
donnees$site_ordo <- as.numeric(donnees$site_ordo)
# we select our country
shape_country <- wrld_simpl %>% subset(., ISO3 %in% c('FIN'))
# we need some new packages
install.packages("plyr")
install.packages("eurostat")
install.packages("ggmap")
install.packages("tidyr")
install.packages("geosphere")
install.packages("sp")
install.packages("rgdal")
install.packages("rgeos")
install.packages("maps")
install.packages("GADMTools")
install.packages("maptools")
install.packages("countrycode")
library(plyr)
library(eurostat)
library(ggmap)
library(tidyr)
library(geosphere)
install.packages("geosphere")
library(geosphere)
library(ggplot2)
library(sp)
library(rgdal)
library(rgeos)
library(maps)
library(GADMTools)
library(maptools)
library(countrycode)
install.packages("GADMTools")
# we select our country
shape_country <- wrld_simpl %>% subset(., ISO3 %in% c('FIN'))
install.packages("installr")
library(installr)
#opening data
donnees <- read.csv("../Donnees/donnees_propres_korpela.csv", sep=",", header=T, dec=".")
library(plyr)
library(eurostat)
library(plyr)
# we select our country
shape_country <- wrld_simpl %>% subset(., ISO3 %in% c('FIN'))
library(dplyr)
library(epiR)
library(epiDisplay)
library(eurostat)
library(ggmap)
library(tidyr)
library(tidyr)
library(geosphere)
library(ggplot2)
library(sp)
library(rgdal)
library(rgeos)
library(maps)
library(GADMTools)
install.packages("GADMTools")
library(maptools)
library(countrycode)
# we need some new packages
library(ggmap)
us <- c(left = -125, bottom = 25.75, right = -67, top = 49)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
us <- c(left = -170, bottom = 35, right = -67, top = 49)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
us <- c(left =10, bottom = 10, right = -97, top = 80)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
us <- c(left =10, bottom = 10, right = -97, top = 80)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
# we need some new packages
library(ggmap)
mygeocode <- function(adresses){
# adresses est un vecteur contenant toutes les adresses sous forme de chaine de caracteres
nominatim_osm <- function(address = NULL){
## details: http://wiki.openstreetmap.org/wiki/Nominatim
## fonction nominatim_osm proposée par D.Kisler
if(suppressWarnings(is.null(address)))  return(data.frame())
tryCatch(
d <- jsonlite::fromJSON(
gsub('\\@addr\\@', gsub('\\s+', '\\%20', address),
'http://nominatim.openstreetmap.org/search/@addr@?format=json&addressdetails=0&limit=1')
), error = function(c) return(data.frame())
)
if(length(d) == 0) return(data.frame())
return(c(as.numeric(d$lon), as.numeric(d$lat)))
}
tableau <- t(sapply(adresses,nominatim_osm))
colnames(tableau) <- c("lon","lat")
return(tableau)
mygeocode <- function(adresses){
# adresses est un vecteur contenant toutes les adresses sous forme de chaine de caracteres
nominatim_osm <- function(address = NULL){
## details: http://wiki.openstreetmap.org/wiki/Nominatim
## fonction nominatim_osm proposée par D.Kisler
if(suppressWarnings(is.null(address)))  return(data.frame())
tryCatch(
d <- jsonlite::fromJSON(
gsub('\\@addr\\@', gsub('\\s+', '\\%20', address),
'http://nominatim.openstreetmap.org/search/@addr@?format=json&addressdetails=0&limit=1')
), error = function(c) return(data.frame())
)
if(length(d) == 0) return(data.frame())
return(c(as.numeric(d$lon), as.numeric(d$lat)))
}
tableau <- t(sapply(adresses,nominatim_osm))
colnames(tableau) <- c("lon","lat")
return(tableau)}
mygeocode("Finlande")
mygeocode("Inari")
us <- c(left =20, bottom = 60, right = 30, top = 70)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
us <- c(left =20, bottom = 60, right = 30, top = 70)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
install.packages("mapsFinland")
library(mapsFinland)
us <- c(left =20, bottom = 60, right = 30, top = 70)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
ggmap(map)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
us <- c(left =20, bottom = 60, right = 30, top = 70)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
#opening data
donnees <- read.csv("../Donnees/donnees_propres_korpela.csv", sep=",", header=T, dec=".")
# we need some new packages
library(ggmap)
us <- c(left =20, bottom = 60, right = 30, top = 70)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
us <- c(left =20, bottom = 58, right = 30, top = 72)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
ggmap(map)
us <- c(left =20, bottom = 59, right = 31, top = 70)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
us <- c(left =20, bottom = 59, right = 31.5, top = 70.5)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
us <- c(left =20, bottom = 59, right = 32, top = 70.5)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-lite")
ggmap(map)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-background")
ggmap(map)
ggmap(map)
us <- c(left =20, bottom = 59, right = 32, top = 70.5)
map <- get_stamenmap(us, zoom = 5, maptype = "toner-background")
ggmap(map)
View(donnees)
points <- donnees[,c(9,10)]
View(points)
donnees_annee <- filter(donnees,year==2012)
library(dplyr)
donnees_annee <- filter(donnees,year==2012)
points <- donnees_annee[,c(9,10)]
View(points)
donnees_annee <- filter(donnees,year==2011)
points <- donnees_annee[,c(9,10)]
View(points)
points <- points %>%  as.matrix() %>% st_multipoint()  %>% st_geometry() %>% st_cast(to="POINT")
library(sf)
points <- points %>%  as.matrix() %>% st_multipoint()  %>% st_geometry() %>% st_cast(to="POINT")
points
ggplot(map)+geom_sf()+geom_sf(data=points)
ggmap(map)+geom_sf()+geom_sf(data=points)
install.packages(mapsf)
install.packages("mapsf")
library(mapsf)
fin <- mf_get_fin()
mtq <- mf_get_mtq()
mtq <- mf_get_fji()
mtq <- mf_get_fin()
?mapsf
source("~/ETUDES/SP S2/STG102_Stage/Projet/Code/01_code_donnees.R")
